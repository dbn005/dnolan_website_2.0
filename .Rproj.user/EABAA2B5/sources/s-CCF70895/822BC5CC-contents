---
title: "Examining the Statistics of MLB Pitchers in 2021"
description: |
  The purpose of these visualizations is to, through quantitative measurements, judge the pitching arsenal and overall performance of pitchers in the 2021 Major League Baseball season.  Using data gathered from https://atmlb.com/3y4wYXS, the graphs below seek to examine the relationships between certain types of statistics such as ERA, pitch spin rate, and strikeout percentage.  After looking at these visualizations, we want to be able to discover which variables lead to success on the mound.
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

First, let's examine the relationship between strikeout rate and earned run average (ERA).  Does a high K% lead to a low ERA?  Does striking batters out equal overall success?  One would guess that the more batters a pitcher strikes out, the more effective he will be.  

```{r}
library(ggplot2)
library(plotly)
data = read.csv("dataset.csv", header = TRUE, sep = ",")
attach(data)
p = ggplot(data, aes(x = k_percent, y = era, text = paste(first_name, ï..last_name))) +
  geom_point() +
  labs(x = "Strikeout Percentage", y = "ERA", title = "ERA vs. Strikeout Rate") +
  geom_smooth(method = "lm")
ggplotly(p)
#how can i clean this up?

```
The correlation coefficient between strikeout rate and ERA is -0.521, meaning that there is a moderate negative linear correlation between the two variables. In other words, there is some truth to the statement that pitchers who strike out more batters are more likely to have lower ERAs, and thus experience more success.

_____________________________________________________________________________________________________________________________________________________________________________________

```{r}
X.4seam.cat = cut(X.4seam, breaks = c(quantile(X.4seam, 0, na.rm = TRUE), quantile(X.4seam, 1/3, na.rm = TRUE), quantile(X.4seam, 2/3, na.rm = TRUE), 
quantile(X.4seam, 1, na.rm = TRUE)), labels = c("low", "medium", "high"), include.lowest = TRUE)
#table(X.4seam.cat)
#Splitting up 4-seam fastball percentage into low, medium, and high usage.
X.slider.cat = cut(X.slider, breaks = c(quantile(X.slider, 0, na.rm = TRUE), quantile(X.slider, 1/3, na.rm = TRUE), quantile(X.slider, 2/3, na.rm = TRUE), 
quantile(X.slider, 1, na.rm = TRUE)), labels = c("low", "medium", "high"), include.lowest = TRUE)
#table(X.slider.cat)
#Splitting up slider percentage into low, medium, and high usage.
X.changeup.cat = cut(X.changeup, breaks = c(quantile(X.changeup, 0, na.rm = TRUE), quantile(X.changeup, 1/3, na.rm = TRUE), quantile(X.changeup, 2/3, na.rm = TRUE), 
quantile(X.changeup, 1, na.rm = TRUE)), labels = c("low", "medium", "high"), include.lowest = TRUE)
#table(X.changeup.cat)
#Splitting up changeup percentage into low, medium, and high usage.
X.curve.cat = cut(X.curve, breaks = c(quantile(X.curve, 0, na.rm = TRUE), quantile(X.curve, 1/3, na.rm = TRUE), quantile(X.curve, 2/3, na.rm = TRUE), 
quantile(X.curve, 1, na.rm = TRUE)), labels = c("low", "medium", "high"), include.lowest = TRUE)
# table(X.curve.cat)
#Splitting up 4-seam fastball percentage into low, medium, and high usage.
data$X.4seam.cat = X.4seam.cat
data.sub = data[,c("X.4seam.cat", "X4seam_speed")]
data.sub = data.sub[complete.cases(data.sub),]
```

The graph below aims to see if pitchers with faster fastballs throw them more often.  Generally, one would think that if a pitcher throws a faster 4-seamer, he would be inclined to throw it more.  The violin boxplot below examines that relationship.  The pitchers that throw fastballs have been split up by percentile into three categories: low fastball frequency, medium frequency, and high frequency. Take a look at the graph below and examine the relationship between the two variables.  

```{r}
ggplot(data.sub, aes(x = X4seam_speed, y = X.4seam.cat, fill = X.4seam.cat), na.rm=TRUE) +
  geom_violin(alpha = .5, na.rm = TRUE)+
  geom_boxplot(width = .5, na.rm = TRUE)+
  labs(y = "Frequency With Which a Four Seam Fastball is Thrown", x = "Average Four Seam Fastball Speed (mph)", title = "How Often a Fastball is Thrown vs. Average Fastball Speed")+
  scale_fill_discrete(name = "Frequency")

#can/should I link my data set? YES
#Is the commentary below my second graph good or too much? GOOD
```

Somewhat surprisingly, the graph shows little to no relationship between the two variables.  While the medians do slightly trend upwards as frequency is increased, all three violin plots are very similar.  A closer look at some of the outliers reveals some important things to notice.  

First, Emmanuel Clase is the only pitcher with an average fastball velocity of over 100 mph.  However, he only threw his fastball .9% of the time.  Why would someone with such a powerful fastball use it so sparingly?  A look at the data set shows that Clase relied heavily on his cutter, a pitch that also topped 100 mph.  He threw the cutter 69.4% of the time.  Because Clase's cutter was so good, he had no reason to throw the fastball.  Thus, it became an outlier in the data set.  

Another interesting outlier is San Francisco Giants reliever Tyler Rogers.  Rogers has the slowest fastball velocity in the data set, yet he threw the pitch with a high frequency.  Confusing, right?  But Rogers is a submarine pitcher, one who's arm nearly scrapes the ground as he delivers his pitch.  Rogers' unorthodox pitching motion allows him to fool hitters and thrive with a very below-average fastball velocity.  

_____________________________________________________________________________________________________________________________________________________________________________________

This next plot will look to identify which pitchers have the best sliders.  Typically, an effective slider is based on two things: speed and movement.  A high-velocity slider and one with a lot of movement will be the toughest to hit.  In the hexbin plot below, pitchers' sliders are measured by these two variables.  

```{r}
library(hexbin)
h = ggplot(data, aes(x = sl_speed, y = sl_break)) +
  geom_hex(bins = 15) +
  labs(x= "Average Slider Speed (mph)", y = "Average Slider Break (in.)", title = "Graphing Pitchers' Average Speed and Break of a Slider")+
  scale_fill_continuous("Number of Pitchers")
h2 = ggplotly(h)
style(h2, hoveron = "data", hoverinfo = "x+y+text")
#how do I get the graph to show the data points when I hover?
```
**Make it clear that there is no causation between the two

_____________________________________________________________________________________________________________________________________________________________________________________

4th plot: Examining the relationship between strikeout percentage and weighted expected on-base average.  According to Statcast, "xwOBA is formulated using exit velocity, launch angle and, on certain types of batted balls, Sprint Speed." Essentially, it measures how a hitter is expected to be performing strictly based upon factors he can control.  The best pitchers will yield low xwOBAs.  In the scatterplot below, each pitcher's point is colored based upon whether his ERA falls into the lower third of the data, the middle third, or the higher third.  

```{r}
# first_name[1:10]
# era_list = sort(era)
# era_list
# first_name[era_list[1:10]]
# first_name[which.max(era_list)]
era.cat = cut(era, breaks = c(quantile(era, 0, na.rm = TRUE), quantile(era, 1/3, na.rm = TRUE), quantile(era, 2/3, na.rm = TRUE), 
quantile(era, 1, na.rm = TRUE)), labels = c("low", "medium", "high"), include.lowest = TRUE)

g = ggplot(data, aes(x = k_percent, y = xwoba, fill = era.cat, text = paste(first_name, ï..last_name))) +
  geom_point() +
  labs(x = "Strikeout Percentage", y = "wxOBA", title = "wxOBA vs. Strikeout Rate") 
ggplotly(g)

```

_____________________________________________________________________________________________________________________________________________________________________________________

This stacked barchart below challenges the relationship between whiff rate, the percentage of pitches for which a pitcher generates a swing and miss, and ERA.  

```{r}
# whiff_percent[1:10]
# whiff.sort = sort(whiff_percent, decreasing = TRUE)
# for(i in whiff.sort){
#   arsenal = NULL
#   if(is.na(X.4seam) == FALSE){
#     arsenal[i] = X.4seam[i]
#   }
# }
# arsenal
# w = whiff.sort[1:10]
# ggplot(data, aes(x = w, fill = Smoke)) +
#   geom_bar(position = "fill")]
whiff.cat = cut(whiff_percent, breaks = c(quantile(whiff_percent, 0, na.rm = TRUE), quantile(whiff_percent, 1/3, na.rm = TRUE), quantile(whiff_percent, 2/3, na.rm = TRUE), 
quantile(whiff_percent, 1, na.rm = TRUE)), labels = c("low", "medium", "high"), include.lowest = TRUE)

ggplot(data, aes(x = whiff.cat, fill = era.cat)) +
  geom_bar(position = "dodge") +
  labs(x = "Whiff Rate", y = "Number of Pitchers", title = "Whiff Rate Sorted by ERA")
```

```{r}
whiff.sort = order(whiff_percent, decreasing = TRUE)
topten = whiff.sort[1:10]
a = X.4seam[topten]
b = X.slider[topten]
c= X.changeup[topten]
d = X.curve[topten]
e = X.sinker[topten]
f = X.split[topten]
g = X.cutter[topten]
pitch_frq_degrom = c(a[1], b[1], c[1], d[1], e[1], f[1], g[1])
pitch_frq_iglesias = c(a[2], b[2], c[2], d[2], e[2], f[2], g[2])
pitch_frq_hendriks = c(a[3], b[3], c[3], d[3], e[3], f[3], g[3])
pitch_frq_glasnow = c(a[4], b[4], c[4], d[4], e[4], f[4], g[4])
pitch_frq_scott = c(a[5], b[5], c[5], d[5], e[5], f[5], g[5])
pitch_frq_sewald = c(a[6], b[6], c[6], d[6], e[6], f[6], g[6])
pitch_frq_burnes = c(a[7], b[7], c[7], d[7], e[7], f[7], g[7])
pitch_frq_bieber = c(a[8], b[8], c[8], d[8], e[8], f[8], g[8])
pitch_frq_diaz = c(a[9], b[9], c[9], d[9], e[9], f[9], g[9])
pitch_frq_diekman = c(a[10], b[10], c[10], d[10], e[10], f[10], g[10])
total_pitch_frq = data.frame(cbind(pitch_frq_degrom, pitch_frq_iglesias, pitch_frq_hendriks, pitch_frq_glasnow, pitch_frq_scott, pitch_frq_sewald, pitch_frq_burnes, pitch_frq_bieber, pitch_frq_diaz, pitch_frq_diekman))
total_pitch_frq

ggplot(total_pitch_frq, aes(x = [ ], fill = [, ])) +
  geom_bar(position = "fill")

```

